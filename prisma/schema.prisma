// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model Category {
  id     String   @id @default(auto()) @map("_id") @db.ObjectId
  name   String   @unique
  Course Course[]
}

model Course {
  id               String        @id @default(auto()) @map("_id") @db.ObjectId
  title            String
  description      String?
  introduction     String?
  duration         Int?          @default(0)
  level            String?       @default("basic")
  hasCertificate   Boolean?      @default(false)
  coverImageUrl    String?       @default("https://i.imgur.com/bYHLC9J.png")
  subject          String?
  categoryId       String?       @db.ObjectId
  Category         Category?     @relation(fields: [categoryId], references: [id])
  Instructor       Instructor[]
  Tag              Tag[]
  Module           Module[]
  Question         Question[]
  SubscribedCourse Subscripion[]
}

model Instructor {
  id         String  @id @default(auto()) @map("_id") @db.ObjectId
  name       String
  formation1 String
  formation2 String?
  profileUrl String?
  Course     Course? @relation(fields: [courseId], references: [id])
  courseId   String? @db.ObjectId
}

model Tag {
  id       String  @id @default(auto()) @map("_id") @db.ObjectId
  name     String
  Course   Course? @relation(fields: [courseId], references: [id])
  courseId String? @db.ObjectId
}

model Module {
  id       String   @id @default(auto()) @map("_id") @db.ObjectId
  number   Int
  title    String?
  courseId String   @db.ObjectId
  course   Course   @relation(fields: [courseId], references: [id])
  Lesson   Lesson[]
}

model Lesson {
  id         String  @id @default(auto()) @map("_id") @db.ObjectId
  title      String?
  number     Int
  attachment String?
  videoUrl   String?
  moduleId   String  @db.ObjectId
  Module     Module  @relation(fields: [moduleId], references: [id])
}

model Question {
  id             String           @id @default(auto()) @map("_id") @db.ObjectId
  text           String
  courseId       String           @db.ObjectId
  QuestionOption QuestionOption[]
  Course         Course           @relation(fields: [courseId], references: [id])
}

model QuestionOption {
  id         String   @id @default(auto()) @map("_id") @db.ObjectId
  isCorrect  Boolean  @default(false)
  text       String
  questionId String   @db.ObjectId
  Question   Question @relation(fields: [questionId], references: [id])
}

model User {
  id               String        @id @default(auto()) @map("_id") @db.ObjectId
  clerkId          String?       @unique
  fullName         String
  SubscribedCourse Subscripion[]
}

model Subscripion {
  id              String    @id @default(auto()) @map("_id") @db.ObjectId
  userId          String    @db.ObjectId
  courseId        String    @db.ObjectId
  finishedAt      DateTime?
  startedAt       DateTime?
  currentLessonId String?   @default("0")
  // finisedLessons  String[] talvez tentar implementar depois

  user   User   @relation(fields: [userId], references: [id])
  course Course @relation(fields: [courseId], references: [id])
}

model ErrorLog {
  id         String   @id @default(auto()) @map("_id") @db.ObjectId
  message    String
  stackTrace String?
  timestamp  DateTime @default(now())
  endpoint   String?
  userId     String?  @db.ObjectId
  path       String?
  statusCode Int?
}
